% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Appender.R
\name{AppenderMemoryDt}
\alias{AppenderMemoryDt}
\alias{yog_data}
\title{AppenderMemoryDt}
\description{
An Appender that outputs to an in-memory \code{data.table}. This requires that
you have the suggested package \strong{data.table} installed. This kind of appender
is pretty useful for interactive use, and hast very little overhead.
}
\section{Creating a new AppenderMemoryDt}{


\describe{
\item{buffer_size}{\code{integer} scalar. Number of rows of the in-memory
\code{data.table}.}
\item{prototype}{A prototype \code{data.table}. This is only necessary if you
use custom \link{LogEvents} (which is not yet supported by yog, but planned for
the future)}
}
}

\section{Methods}{


\describe{
\item{\code{show(n, threshold)}}{Show the last \code{n} log entries with a log level
bellow \code{threshold}. The log entries will be formated for console output
via the defined \link{Layout}}
}
}

\section{Active Bindings}{


\describe{
\item{\code{data}}{read-only binding to access all cached LogEvents as a \code{data.table}}
}
}

\examples{
lg <- Logger$new(
  "test",
  appenders = list(memory = AppenderMemoryDt$new()),
  threshold = NA,
  parent = NULL  # to prevent routing to root logger for this example
)
lg$debug("test")
lg$error("test")

# Displaying the log
lg$appenders$memory$data
lg$appenders$memory$show()
show_log(target = lg$appenders$memory)

# If you pass a Logger to show_log, it looks for the first MemoryAppender it
# can find.
show_log(target = lg)
}
\seealso{
\link{LayoutFormat}, \link{simple_logging}, \link[data.table:data.table]{data.table::data.table}

Other Appenders: \code{\link{AppenderBuffer}},
  \code{\link{AppenderConsole}},
  \code{\link{AppenderFile}}, \code{\link{Appender}}
}
\concept{Appenders}
