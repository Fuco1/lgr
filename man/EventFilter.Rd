% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Filter.R
\name{EventFilter}
\alias{EventFilter}
\alias{Filter}
\title{Event Filters}
\description{
Filters can be used for the \verb{$set_filter()} and \verb{$add_filter()} methods of
Appenders and Loggers. You normally do not need to construct a formal
\code{EventFilter} object, you can just use any \code{function} that has the single
argument \code{event}, or any object that has a \code{filter} method.

NOTE: You can use the special function \code{\link[=.obj]{.obj()}} to access the calling
Logger/Appender from within a filter
}
\section{Modifying LogEvents with Filters}{


Since LogEvents are R6 objects with reference semantics, Filters can
be abused to modify log events before passing them on. lgr comes with a few
preset filters that use this property: \link{FilterInject}
(similar to \code{\link[=with_log_level]{with_log_level()}}) and \link{FilterForceLevel} (similar to \code{\link[=with_log_value]{with_log_value()}}).

The base class for Filters is called \code{EventFilter} so that it doesn't
conflict with \code{\link[base:Filter]{base::Filter()}}. The recommended convention for Filter
subclasses is to call them \code{FilterSomething} and leave out the
\code{Event} prefix.
}

\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EventFilter$new()}}
\item \href{#method-clone}{\code{EventFilter$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initilize a new EventFilter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventFilter$new(fun = function(event) TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{a \code{function} with a single argument \code{event} that must return
either \code{TRUE} or \code{FALSE.}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EventFilter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
