% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Layout.R
\name{LayoutJson}
\alias{LayoutJson}
\title{Format LogEvents as JSON}
\description{
Format a LogEvent as JSON
}
\section{Usage}{
\preformatted{x <- LayoutJson$new(event_vals = NULL, logger_vals = character(),
  toJSON_args = list(auto_unbox = TRUE))

x$format_event(event)
x$set_toJSON_args(x)
x$clone(deep = FALSE)

x$toJSON_args
}
}

\section{Creating a New Layout}{

\describe{
\item{\code{toJSON_args}}{a list of values passed on to \code{\link[jsonlite:toJSON]{jsonlite::toJSON()}}}
}



\describe{
\item{\code{event_vals}}{Names of the fields of the \link{LogEvent}
to include in the output object.
}

\item{\code{logger_vals}}{Names of the fields of the \link{Logger} that produced the
\link{LogEvent} to include in the output object.
}
}
}

\section{Fields and Methods}{

\describe{
\item{\code{toJSON_args}, \code{set_toJSON_args()}}{Get/set the \code{toJSON_args}}
}



\describe{
\item{\code{format_event(event)}}{format a \link{LogEvent}}
}
}

\examples{

# setup a dummy LogEvent

event <- LogEvent$new(
  logger = Logger$new("dummy logger", user = "testuser"),
  level = 200,
  timestamp = Sys.time(),
  caller = NA_character_,
  msg = "a test message",
  custom_field = "LayoutJson can handle arbitrary fields"
)

# Default settings show all event fals
lo <- LayoutJson$new()
lo$format_event(event)


# Values from the LogEvent can be suppressed, and values from the Logger
# can be added
lo <- LayoutJson$new(
  event_vals = c("level", "timestamp", "msg"),
  logger_vals = c("user", logger_name = "name")
)
lo$format_event(event)

}
\seealso{
\code{\link[=read_json_lines]{read_json_lines()}}, \url{http://jsonlines.org/}

Other Layouts: \code{\link{LayoutDbi}},
  \code{\link{LayoutFormat}}, \code{\link{LayoutTable}},
  \code{\link{Layout}}
}
\concept{Layouts}
